// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

let first  (a, _, _) = a
let second (_, b, _) = b
let third  (_, _, c) = c

# 26 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | QUEST
  | COLON
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | SELFPLUS
  | SELFMINUS
  | CHAR
  | STRING
  | ELSE
  | IF
  | INT
  | FLOAT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | SWITCH
  | CASE
  | BREAK
  | DEFAULT
  | CSTCHAR of (char)
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTFLOAT of (float32)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_QUEST
    | TOKEN_COLON
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_SELFPLUS
    | TOKEN_SELFMINUS
    | TOKEN_CHAR
    | TOKEN_STRING
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_FLOAT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_BREAK
    | TOKEN_DEFAULT
    | TOKEN_CSTCHAR
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTFLOAT
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VariableDeclareAndAssign
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtCase
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_ConstFloat
    | NONTERM_ConstChar
    | NONTERM_ConstString
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | QUEST  -> 11 
  | COLON  -> 12 
  | NOT  -> 13 
  | SEQOR  -> 14 
  | SEQAND  -> 15 
  | EQ  -> 16 
  | NE  -> 17 
  | GT  -> 18 
  | LT  -> 19 
  | GE  -> 20 
  | LE  -> 21 
  | PLUS  -> 22 
  | MINUS  -> 23 
  | TIMES  -> 24 
  | DIV  -> 25 
  | MOD  -> 26 
  | SELFPLUS  -> 27 
  | SELFMINUS  -> 28 
  | CHAR  -> 29 
  | STRING  -> 30 
  | ELSE  -> 31 
  | IF  -> 32 
  | INT  -> 33 
  | FLOAT  -> 34 
  | NULL  -> 35 
  | PRINT  -> 36 
  | PRINTLN  -> 37 
  | RETURN  -> 38 
  | VOID  -> 39 
  | WHILE  -> 40 
  | SWITCH  -> 41 
  | CASE  -> 42 
  | BREAK  -> 43 
  | DEFAULT  -> 44 
  | CSTCHAR _ -> 45 
  | CSTSTRING _ -> 46 
  | NAME _ -> 47 
  | CSTFLOAT _ -> 48 
  | CSTINT _ -> 49 
  | CSTBOOL _ -> 50 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_QUEST 
  | 12 -> TOKEN_COLON 
  | 13 -> TOKEN_NOT 
  | 14 -> TOKEN_SEQOR 
  | 15 -> TOKEN_SEQAND 
  | 16 -> TOKEN_EQ 
  | 17 -> TOKEN_NE 
  | 18 -> TOKEN_GT 
  | 19 -> TOKEN_LT 
  | 20 -> TOKEN_GE 
  | 21 -> TOKEN_LE 
  | 22 -> TOKEN_PLUS 
  | 23 -> TOKEN_MINUS 
  | 24 -> TOKEN_TIMES 
  | 25 -> TOKEN_DIV 
  | 26 -> TOKEN_MOD 
  | 27 -> TOKEN_SELFPLUS 
  | 28 -> TOKEN_SELFMINUS 
  | 29 -> TOKEN_CHAR 
  | 30 -> TOKEN_STRING 
  | 31 -> TOKEN_ELSE 
  | 32 -> TOKEN_IF 
  | 33 -> TOKEN_INT 
  | 34 -> TOKEN_FLOAT 
  | 35 -> TOKEN_NULL 
  | 36 -> TOKEN_PRINT 
  | 37 -> TOKEN_PRINTLN 
  | 38 -> TOKEN_RETURN 
  | 39 -> TOKEN_VOID 
  | 40 -> TOKEN_WHILE 
  | 41 -> TOKEN_SWITCH 
  | 42 -> TOKEN_CASE 
  | 43 -> TOKEN_BREAK 
  | 44 -> TOKEN_DEFAULT 
  | 45 -> TOKEN_CSTCHAR 
  | 46 -> TOKEN_CSTSTRING 
  | 47 -> TOKEN_NAME 
  | 48 -> TOKEN_CSTFLOAT 
  | 49 -> TOKEN_CSTINT 
  | 50 -> TOKEN_CSTBOOL 
  | 53 -> TOKEN_end_of_input
  | 51 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_VariableDeclareAndAssign 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Vardesc 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtCase 
    | 36 -> NONTERM_StmtCase 
    | 37 -> NONTERM_StmtCase 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_StmtU 
    | 41 -> NONTERM_Expr 
    | 42 -> NONTERM_Expr 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_AtExprNotAccess 
    | 68 -> NONTERM_AtExprNotAccess 
    | 69 -> NONTERM_AtExprNotAccess 
    | 70 -> NONTERM_AtExprNotAccess 
    | 71 -> NONTERM_AtExprNotAccess 
    | 72 -> NONTERM_AtExprNotAccess 
    | 73 -> NONTERM_Access 
    | 74 -> NONTERM_Access 
    | 75 -> NONTERM_Access 
    | 76 -> NONTERM_Access 
    | 77 -> NONTERM_Access 
    | 78 -> NONTERM_Exprs 
    | 79 -> NONTERM_Exprs 
    | 80 -> NONTERM_Exprs1 
    | 81 -> NONTERM_Exprs1 
    | 82 -> NONTERM_Const 
    | 83 -> NONTERM_Const 
    | 84 -> NONTERM_Const 
    | 85 -> NONTERM_Const 
    | 86 -> NONTERM_ConstFloat 
    | 87 -> NONTERM_ConstFloat 
    | 88 -> NONTERM_ConstChar 
    | 89 -> NONTERM_ConstString 
    | 90 -> NONTERM_Type 
    | 91 -> NONTERM_Type 
    | 92 -> NONTERM_Type 
    | 93 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 53 
let _fsyacc_tagOfErrorTerminal = 51

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | QUEST  -> "QUEST" 
  | COLON  -> "COLON" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | SELFPLUS  -> "SELFPLUS" 
  | SELFMINUS  -> "SELFMINUS" 
  | CHAR  -> "CHAR" 
  | STRING  -> "STRING" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | FLOAT  -> "FLOAT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | BREAK  -> "BREAK" 
  | DEFAULT  -> "DEFAULT" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | QUEST  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | SELFPLUS  -> (null : System.Object) 
  | SELFMINUS  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | STRING  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 6us; 65535us; 0us; 8us; 4us; 8us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 5us; 65535us; 11us; 15us; 12us; 14us; 13us; 14us; 20us; 21us; 22us; 23us; 2us; 65535us; 0us; 10us; 4us; 10us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 14us; 65535us; 33us; 34us; 37us; 38us; 43us; 63us; 46us; 63us; 49us; 63us; 52us; 63us; 70us; 63us; 71us; 63us; 73us; 63us; 74us; 63us; 82us; 63us; 83us; 63us; 96us; 63us; 100us; 63us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 5us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 71us; 103us; 12us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 70us; 72us; 71us; 55us; 73us; 75us; 74us; 75us; 82us; 84us; 83us; 84us; 96us; 97us; 100us; 101us; 2us; 65535us; 89us; 90us; 97us; 98us; 7us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 71us; 56us; 74us; 102us; 83us; 104us; 44us; 65535us; 16us; 17us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 61us; 66us; 69us; 67us; 68us; 70us; 57us; 71us; 57us; 73us; 57us; 74us; 57us; 78us; 81us; 79us; 80us; 82us; 57us; 83us; 57us; 86us; 87us; 96us; 57us; 100us; 57us; 110us; 111us; 113us; 140us; 116us; 117us; 118us; 119us; 143us; 121us; 144us; 122us; 145us; 123us; 146us; 124us; 147us; 125us; 148us; 126us; 149us; 127us; 150us; 128us; 151us; 129us; 152us; 130us; 153us; 131us; 154us; 132us; 155us; 133us; 156us; 134us; 157us; 135us; 158us; 136us; 159us; 138us; 164us; 137us; 165us; 137us; 176us; 139us; 179us; 140us; 44us; 65535us; 16us; 107us; 43us; 107us; 46us; 107us; 49us; 107us; 52us; 107us; 59us; 107us; 66us; 107us; 67us; 107us; 70us; 107us; 71us; 107us; 73us; 107us; 74us; 107us; 78us; 107us; 79us; 107us; 82us; 107us; 83us; 107us; 86us; 107us; 96us; 107us; 100us; 107us; 110us; 107us; 113us; 107us; 116us; 107us; 118us; 107us; 143us; 107us; 144us; 107us; 145us; 107us; 146us; 107us; 147us; 107us; 148us; 107us; 149us; 107us; 150us; 107us; 151us; 107us; 152us; 107us; 153us; 107us; 154us; 107us; 155us; 107us; 156us; 107us; 157us; 107us; 158us; 107us; 159us; 107us; 164us; 108us; 165us; 108us; 176us; 107us; 179us; 107us; 46us; 65535us; 16us; 109us; 43us; 109us; 46us; 109us; 49us; 109us; 52us; 109us; 59us; 109us; 66us; 109us; 67us; 109us; 70us; 109us; 71us; 109us; 73us; 109us; 74us; 109us; 78us; 109us; 79us; 109us; 82us; 109us; 83us; 109us; 86us; 109us; 94us; 95us; 96us; 109us; 100us; 109us; 110us; 109us; 113us; 109us; 116us; 109us; 118us; 109us; 143us; 109us; 144us; 109us; 145us; 109us; 146us; 109us; 147us; 109us; 148us; 109us; 149us; 109us; 150us; 109us; 151us; 109us; 152us; 109us; 153us; 109us; 154us; 109us; 155us; 109us; 156us; 109us; 157us; 109us; 158us; 109us; 159us; 109us; 164us; 109us; 165us; 109us; 173us; 175us; 176us; 109us; 179us; 109us; 47us; 65535us; 16us; 106us; 43us; 106us; 46us; 106us; 49us; 106us; 52us; 106us; 59us; 106us; 66us; 106us; 67us; 106us; 70us; 106us; 71us; 106us; 73us; 106us; 74us; 106us; 78us; 106us; 79us; 106us; 82us; 106us; 83us; 106us; 86us; 106us; 96us; 106us; 100us; 106us; 110us; 106us; 113us; 106us; 116us; 106us; 118us; 106us; 143us; 106us; 144us; 106us; 145us; 106us; 146us; 106us; 147us; 106us; 148us; 106us; 149us; 106us; 150us; 106us; 151us; 106us; 152us; 106us; 153us; 106us; 154us; 106us; 155us; 106us; 156us; 106us; 157us; 106us; 158us; 106us; 159us; 106us; 164us; 106us; 165us; 105us; 167us; 168us; 170us; 171us; 173us; 174us; 176us; 106us; 179us; 106us; 1us; 65535us; 113us; 114us; 2us; 65535us; 113us; 178us; 179us; 180us; 46us; 65535us; 16us; 160us; 43us; 160us; 46us; 160us; 49us; 160us; 52us; 160us; 59us; 160us; 66us; 160us; 67us; 160us; 70us; 160us; 71us; 160us; 73us; 160us; 74us; 160us; 78us; 160us; 79us; 160us; 82us; 160us; 83us; 160us; 86us; 160us; 94us; 160us; 96us; 160us; 100us; 160us; 110us; 160us; 113us; 160us; 116us; 160us; 118us; 160us; 143us; 160us; 144us; 160us; 145us; 160us; 146us; 160us; 147us; 160us; 148us; 160us; 149us; 160us; 150us; 160us; 151us; 160us; 152us; 160us; 153us; 160us; 154us; 160us; 155us; 160us; 156us; 160us; 157us; 160us; 158us; 160us; 159us; 160us; 164us; 160us; 165us; 160us; 173us; 160us; 176us; 160us; 179us; 160us; 46us; 65535us; 16us; 161us; 43us; 161us; 46us; 161us; 49us; 161us; 52us; 161us; 59us; 161us; 66us; 161us; 67us; 161us; 70us; 161us; 71us; 161us; 73us; 161us; 74us; 161us; 78us; 161us; 79us; 161us; 82us; 161us; 83us; 161us; 86us; 161us; 94us; 161us; 96us; 161us; 100us; 161us; 110us; 161us; 113us; 161us; 116us; 161us; 118us; 161us; 143us; 161us; 144us; 161us; 145us; 161us; 146us; 161us; 147us; 161us; 148us; 161us; 149us; 161us; 150us; 161us; 151us; 161us; 152us; 161us; 153us; 161us; 154us; 161us; 155us; 161us; 156us; 161us; 157us; 161us; 158us; 161us; 159us; 161us; 164us; 161us; 165us; 161us; 173us; 161us; 176us; 161us; 179us; 161us; 46us; 65535us; 16us; 162us; 43us; 162us; 46us; 162us; 49us; 162us; 52us; 162us; 59us; 162us; 66us; 162us; 67us; 162us; 70us; 162us; 71us; 162us; 73us; 162us; 74us; 162us; 78us; 162us; 79us; 162us; 82us; 162us; 83us; 162us; 86us; 162us; 94us; 162us; 96us; 162us; 100us; 162us; 110us; 162us; 113us; 162us; 116us; 162us; 118us; 162us; 143us; 162us; 144us; 162us; 145us; 162us; 146us; 162us; 147us; 162us; 148us; 162us; 149us; 162us; 150us; 162us; 151us; 162us; 152us; 162us; 153us; 162us; 154us; 162us; 155us; 162us; 156us; 162us; 157us; 162us; 158us; 162us; 159us; 162us; 164us; 162us; 165us; 162us; 173us; 162us; 176us; 162us; 179us; 162us; 46us; 65535us; 16us; 163us; 43us; 163us; 46us; 163us; 49us; 163us; 52us; 163us; 59us; 163us; 66us; 163us; 67us; 163us; 70us; 163us; 71us; 163us; 73us; 163us; 74us; 163us; 78us; 163us; 79us; 163us; 82us; 163us; 83us; 163us; 86us; 163us; 94us; 163us; 96us; 163us; 100us; 163us; 110us; 163us; 113us; 163us; 116us; 163us; 118us; 163us; 143us; 163us; 144us; 163us; 145us; 163us; 146us; 163us; 147us; 163us; 148us; 163us; 149us; 163us; 150us; 163us; 151us; 163us; 152us; 163us; 153us; 163us; 154us; 163us; 155us; 163us; 156us; 163us; 157us; 163us; 158us; 163us; 159us; 163us; 164us; 163us; 165us; 163us; 173us; 163us; 176us; 163us; 179us; 163us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 26us; 32us; 35us; 38us; 42us; 57us; 62us; 68us; 81us; 84us; 92us; 137us; 182us; 229us; 277us; 279us; 282us; 329us; 376us; 423us; 470us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 5us; 1us; 6us; 1us; 7us; 2us; 7us; 8us; 3us; 7us; 8us; 15us; 4us; 7us; 8us; 12us; 13us; 3us; 7us; 12us; 13us; 1us; 8us; 17us; 8us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 9us; 2us; 9us; 15us; 1us; 10us; 3us; 10us; 12us; 13us; 1us; 11us; 3us; 11us; 12us; 13us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 3us; 25us; 31us; 38us; 1us; 26us; 17us; 27us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 17us; 29us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 29us; 1us; 30us; 1us; 31us; 3us; 31us; 38us; 39us; 1us; 31us; 3us; 31us; 38us; 39us; 19us; 31us; 38us; 39us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 31us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 31us; 3us; 31us; 38us; 39us; 1us; 31us; 1us; 31us; 2us; 31us; 38us; 1us; 31us; 1us; 32us; 2us; 32us; 40us; 1us; 32us; 2us; 32us; 40us; 18us; 32us; 40us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 32us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 32us; 2us; 32us; 40us; 1us; 32us; 1us; 33us; 1us; 33us; 17us; 33us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 34us; 2us; 35us; 36us; 2us; 35us; 36us; 2us; 35us; 36us; 2us; 35us; 36us; 1us; 36us; 1us; 37us; 1us; 37us; 1us; 37us; 1us; 38us; 1us; 39us; 1us; 40us; 4us; 41us; 44us; 74us; 77us; 3us; 41us; 44us; 77us; 1us; 42us; 2us; 42us; 71us; 1us; 43us; 1us; 44us; 17us; 44us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 2us; 45us; 73us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 17us; 46us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 47us; 17us; 47us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 48us; 17us; 49us; 50us; 51us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 49us; 50us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 49us; 50us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 49us; 50us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 49us; 50us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 49us; 50us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 65us; 66us; 17us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 65us; 66us; 17us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 17us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 17us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 16us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 17us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 66us; 17us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 77us; 18us; 49us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 80us; 81us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 2us; 71us; 74us; 1us; 71us; 1us; 72us; 2us; 72us; 77us; 1us; 73us; 1us; 74us; 2us; 74us; 77us; 1us; 74us; 2us; 75us; 76us; 2us; 75us; 77us; 1us; 76us; 1us; 77us; 1us; 77us; 1us; 79us; 1us; 81us; 1us; 81us; 1us; 82us; 1us; 83us; 2us; 84us; 87us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 93us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 36us; 40us; 42us; 60us; 62us; 65us; 67us; 71us; 73us; 77us; 79us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 104us; 106us; 108us; 110us; 113us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 141us; 145us; 147us; 165us; 167us; 170us; 172us; 190us; 192us; 194us; 196us; 200us; 202us; 206us; 226us; 244us; 246us; 250us; 252us; 254us; 257us; 259us; 261us; 264us; 266us; 269us; 288us; 306us; 308us; 311us; 313us; 315us; 317us; 335us; 337us; 339us; 341us; 343us; 345us; 347us; 350us; 353us; 356us; 359us; 361us; 363us; 365us; 367us; 369us; 371us; 373us; 378us; 382us; 384us; 387us; 389us; 391us; 409us; 412us; 414us; 416us; 418us; 420us; 438us; 440us; 458us; 460us; 478us; 496us; 514us; 532us; 550us; 568us; 586us; 604us; 622us; 640us; 658us; 676us; 694us; 712us; 730us; 748us; 765us; 783us; 801us; 820us; 822us; 824us; 826us; 828us; 830us; 832us; 834us; 836us; 838us; 840us; 842us; 844us; 846us; 848us; 850us; 852us; 854us; 856us; 858us; 860us; 862us; 864us; 866us; 868us; 871us; 873us; 875us; 878us; 880us; 882us; 885us; 887us; 890us; 893us; 895us; 897us; 899us; 901us; 903us; 905us; 907us; 909us; 912us; 914us; 916us; 918us; 920us; 922us; 924us; 926us; 928us; 930us; |]
let _fsyacc_action_rows = 194
let _fsyacc_actionTableElements = [|5us; 16386us; 29us; 191us; 30us; 193us; 33us; 190us; 34us; 192us; 39us; 29us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 5us; 16386us; 29us; 191us; 30us; 193us; 33us; 190us; 34us; 192us; 39us; 29us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 1us; 32768us; 7us; 9us; 0us; 16389us; 0us; 16390us; 3us; 32768us; 1us; 22us; 24us; 20us; 47us; 18us; 3us; 32768us; 1us; 22us; 24us; 20us; 47us; 18us; 3us; 32768us; 1us; 22us; 24us; 20us; 47us; 19us; 2us; 16391us; 5us; 25us; 9us; 16us; 1us; 16391us; 5us; 25us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 16392us; 11us; 156us; 14us; 159us; 15us; 158us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 0us; 16393us; 1us; 16393us; 1us; 35us; 3us; 32768us; 1us; 22us; 24us; 20us; 47us; 18us; 1us; 16394us; 5us; 25us; 3us; 32768us; 1us; 22us; 24us; 20us; 47us; 18us; 2us; 32768us; 2us; 24us; 5us; 25us; 0us; 16395us; 2us; 32768us; 6us; 26us; 49us; 27us; 0us; 16396us; 1us; 32768us; 6us; 28us; 0us; 16397us; 1us; 32768us; 47us; 30us; 1us; 32768us; 1us; 31us; 4us; 16400us; 29us; 191us; 30us; 193us; 33us; 190us; 34us; 192us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 4us; 16400us; 29us; 191us; 30us; 193us; 33us; 190us; 34us; 192us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 4us; 32768us; 29us; 191us; 30us; 193us; 33us; 190us; 34us; 192us; 0us; 16403us; 26us; 16405us; 1us; 165us; 3us; 43us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 29us; 191us; 30us; 193us; 32us; 65us; 33us; 190us; 34us; 192us; 35us; 185us; 36us; 118us; 37us; 120us; 38us; 59us; 40us; 77us; 41us; 85us; 43us; 92us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 1us; 32768us; 4us; 45us; 0us; 16404us; 26us; 16405us; 1us; 165us; 3us; 43us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 29us; 191us; 30us; 193us; 32us; 65us; 33us; 190us; 34us; 192us; 35us; 185us; 36us; 118us; 37us; 120us; 38us; 59us; 40us; 77us; 41us; 85us; 43us; 92us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 0us; 16406us; 1us; 32768us; 7us; 49us; 26us; 16405us; 1us; 165us; 3us; 43us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 29us; 191us; 30us; 193us; 32us; 65us; 33us; 190us; 34us; 192us; 35us; 185us; 36us; 118us; 37us; 120us; 38us; 59us; 40us; 77us; 41us; 85us; 43us; 92us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 0us; 16407us; 1us; 32768us; 7us; 52us; 26us; 16405us; 1us; 165us; 3us; 43us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 29us; 191us; 30us; 193us; 32us; 65us; 33us; 190us; 34us; 192us; 35us; 185us; 36us; 118us; 37us; 120us; 38us; 59us; 40us; 77us; 41us; 85us; 43us; 92us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 31us; 74us; 0us; 16410us; 17us; 32768us; 7us; 58us; 11us; 156us; 14us; 159us; 15us; 158us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 0us; 16411us; 17us; 32768us; 1us; 165us; 7us; 60us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 0us; 16412us; 17us; 32768us; 7us; 62us; 11us; 156us; 14us; 159us; 15us; 158us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 0us; 16413us; 0us; 16414us; 1us; 32768us; 1us; 66us; 1us; 32768us; 1us; 67us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 17us; 32768us; 2us; 71us; 11us; 156us; 14us; 159us; 15us; 158us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 17us; 32768us; 2us; 70us; 11us; 156us; 14us; 159us; 15us; 158us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 22us; 32768us; 1us; 165us; 3us; 43us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 32us; 64us; 35us; 185us; 36us; 118us; 37us; 120us; 38us; 59us; 40us; 76us; 41us; 85us; 43us; 92us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 22us; 32768us; 1us; 165us; 3us; 43us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 32us; 65us; 35us; 185us; 36us; 118us; 37us; 120us; 38us; 59us; 40us; 77us; 41us; 85us; 43us; 92us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 1us; 32768us; 31us; 73us; 22us; 32768us; 1us; 165us; 3us; 43us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 32us; 64us; 35us; 185us; 36us; 118us; 37us; 120us; 38us; 59us; 40us; 76us; 41us; 85us; 43us; 92us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 22us; 32768us; 1us; 165us; 3us; 43us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 32us; 65us; 35us; 185us; 36us; 118us; 37us; 120us; 38us; 59us; 40us; 77us; 41us; 85us; 43us; 92us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 0us; 16415us; 1us; 32768us; 1us; 78us; 1us; 32768us; 1us; 79us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 17us; 32768us; 2us; 83us; 11us; 156us; 14us; 159us; 15us; 158us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 17us; 32768us; 2us; 82us; 11us; 156us; 14us; 159us; 15us; 158us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 22us; 32768us; 1us; 165us; 3us; 43us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 32us; 64us; 35us; 185us; 36us; 118us; 37us; 120us; 38us; 59us; 40us; 76us; 41us; 85us; 43us; 92us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 22us; 32768us; 1us; 165us; 3us; 43us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 32us; 65us; 35us; 185us; 36us; 118us; 37us; 120us; 38us; 59us; 40us; 77us; 41us; 85us; 43us; 92us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 0us; 16416us; 1us; 32768us; 1us; 86us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 17us; 32768us; 2us; 88us; 11us; 156us; 14us; 159us; 15us; 158us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 1us; 32768us; 3us; 89us; 2us; 32768us; 42us; 94us; 44us; 99us; 1us; 32768us; 4us; 91us; 0us; 16417us; 1us; 32768us; 7us; 93us; 0us; 16418us; 9us; 32768us; 1us; 164us; 10us; 167us; 23us; 183us; 35us; 185us; 45us; 188us; 46us; 189us; 48us; 186us; 49us; 181us; 50us; 182us; 1us; 32768us; 12us; 96us; 22us; 32768us; 1us; 165us; 3us; 43us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 32us; 64us; 35us; 185us; 36us; 118us; 37us; 120us; 38us; 59us; 40us; 76us; 41us; 85us; 43us; 92us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 2us; 16419us; 42us; 94us; 44us; 99us; 0us; 16420us; 1us; 32768us; 12us; 100us; 22us; 32768us; 1us; 165us; 3us; 43us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 32us; 64us; 35us; 185us; 36us; 118us; 37us; 120us; 38us; 59us; 40us; 76us; 41us; 85us; 43us; 92us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 0us; 16424us; 3us; 16425us; 2us; 172us; 5us; 176us; 9us; 110us; 2us; 16425us; 5us; 176us; 9us; 110us; 0us; 16426us; 1us; 16426us; 2us; 166us; 0us; 16427us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 16428us; 11us; 156us; 14us; 159us; 15us; 158us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 1us; 16457us; 1us; 113us; 16us; 16462us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 1us; 32768us; 2us; 115us; 0us; 16429us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 2us; 16430us; 27us; 141us; 28us; 142us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 16431us; 11us; 156us; 14us; 159us; 15us; 158us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 0us; 16432us; 2us; 16435us; 27us; 141us; 28us; 142us; 2us; 16436us; 27us; 141us; 28us; 142us; 5us; 16437us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 5us; 16438us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 2us; 16439us; 27us; 141us; 28us; 142us; 2us; 16440us; 27us; 141us; 28us; 142us; 2us; 16441us; 27us; 141us; 28us; 142us; 11us; 16442us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 11us; 16443us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 11us; 16444us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 11us; 16445us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 11us; 16446us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 11us; 16447us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 17us; 32768us; 11us; 156us; 12us; 157us; 14us; 159us; 15us; 158us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 16us; 16448us; 11us; 156us; 14us; 159us; 15us; 158us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 13us; 16449us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 16us; 32768us; 11us; 156us; 14us; 159us; 15us; 158us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 14us; 16450us; 15us; 158us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 17us; 32768us; 6us; 177us; 11us; 156us; 14us; 159us; 15us; 158us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 17us; 16464us; 8us; 179us; 11us; 156us; 14us; 159us; 15us; 158us; 16us; 150us; 17us; 151us; 18us; 152us; 19us; 153us; 20us; 154us; 21us; 155us; 22us; 145us; 23us; 146us; 24us; 147us; 25us; 148us; 26us; 149us; 27us; 141us; 28us; 142us; 0us; 16433us; 0us; 16434us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 0us; 16451us; 0us; 16452us; 0us; 16453us; 0us; 16454us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 0us; 16455us; 3us; 32768us; 1us; 170us; 24us; 173us; 47us; 169us; 1us; 16456us; 5us; 176us; 0us; 16457us; 3us; 32768us; 1us; 170us; 24us; 173us; 47us; 169us; 2us; 32768us; 2us; 172us; 5us; 176us; 0us; 16458us; 11us; 32768us; 1us; 165us; 10us; 167us; 23us; 183us; 24us; 173us; 35us; 185us; 45us; 188us; 46us; 189us; 47us; 169us; 48us; 186us; 49us; 181us; 50us; 182us; 1us; 16459us; 5us; 176us; 0us; 16460us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 0us; 16461us; 0us; 16463us; 16us; 32768us; 1us; 165us; 10us; 167us; 13us; 116us; 23us; 183us; 24us; 173us; 27us; 143us; 28us; 144us; 35us; 185us; 36us; 118us; 37us; 120us; 45us; 188us; 46us; 189us; 47us; 112us; 48us; 186us; 49us; 181us; 50us; 182us; 0us; 16465us; 0us; 16466us; 0us; 16467us; 2us; 32768us; 48us; 187us; 49us; 184us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 0us; 16472us; 0us; 16473us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 0us; 16477us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 6us; 7us; 9us; 10us; 16us; 17us; 19us; 20us; 22us; 23us; 24us; 28us; 32us; 36us; 39us; 41us; 58us; 75us; 76us; 78us; 82us; 84us; 88us; 91us; 92us; 95us; 96us; 98us; 99us; 101us; 103us; 108us; 110us; 112us; 113us; 118us; 120us; 122us; 123us; 124us; 126us; 131us; 132us; 159us; 161us; 162us; 189us; 190us; 192us; 219us; 220us; 222us; 249us; 250us; 251us; 253us; 254us; 272us; 273us; 291us; 292us; 310us; 311us; 312us; 314us; 316us; 333us; 350us; 368us; 386us; 409us; 432us; 434us; 457us; 480us; 481us; 483us; 485us; 502us; 519us; 537us; 555us; 578us; 601us; 602us; 604us; 621us; 639us; 641us; 644us; 646us; 647us; 649us; 650us; 660us; 662us; 685us; 688us; 689us; 691us; 714us; 715us; 716us; 717us; 718us; 722us; 725us; 726us; 728us; 729us; 746us; 763us; 765us; 782us; 784us; 785us; 802us; 805us; 822us; 839us; 840us; 843us; 846us; 852us; 858us; 861us; 864us; 867us; 879us; 891us; 903us; 915us; 927us; 939us; 957us; 974us; 988us; 1005us; 1020us; 1038us; 1056us; 1057us; 1058us; 1075us; 1092us; 1109us; 1126us; 1143us; 1160us; 1177us; 1194us; 1211us; 1228us; 1245us; 1262us; 1279us; 1296us; 1313us; 1330us; 1347us; 1348us; 1349us; 1350us; 1351us; 1368us; 1385us; 1386us; 1390us; 1392us; 1393us; 1397us; 1400us; 1401us; 1413us; 1415us; 1416us; 1433us; 1434us; 1435us; 1452us; 1453us; 1454us; 1455us; 1458us; 1459us; 1460us; 1461us; 1462us; 1463us; 1464us; 1465us; 1466us; 1467us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 2us; 1us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 7us; 2us; 4us; 5us; 3us; 7us; 5us; 5us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 1us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 3us; 3us; 1us; 1us; 1us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 15us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 19us; 19us; 19us; 20us; 20us; 21us; 21us; 22us; 22us; 22us; 22us; 23us; 23us; 24us; 25us; 26us; 26us; 26us; 26us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 65535us; 16389us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 16420us; 65535us; 65535us; 16421us; 16422us; 16423us; 16424us; 65535us; 65535us; 16426us; 65535us; 16427us; 65535us; 65535us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 65535us; 65535us; 16432us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16433us; 16434us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16451us; 16452us; 16453us; 16454us; 65535us; 65535us; 16455us; 65535us; 65535us; 16457us; 65535us; 65535us; 16458us; 65535us; 65535us; 16460us; 65535us; 16461us; 16463us; 65535us; 16465us; 16466us; 16467us; 65535us; 16468us; 16469us; 16470us; 16471us; 16472us; 16473us; 16474us; 16475us; 16476us; 16477us; |]
let _fsyacc_reductions ()  =    [| 
# 500 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 509 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "CPar.fsy"
                                                               Prog _1 
                   )
# 55 "CPar.fsy"
                 : Absyn.program));
# 520 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "CPar.fsy"
                                                               [] 
                   )
# 60 "CPar.fsy"
                 : 'gentype_Topdecs));
# 530 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 61 "CPar.fsy"
                 : 'gentype_Topdecs));
# 542 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 65 "CPar.fsy"
                 : 'gentype_Topdec));
# 553 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VariableDeclareAndAssign in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "CPar.fsy"
                                                               VariableDeclareAndAssign(first _1, second _1 , third _1)  
                   )
# 66 "CPar.fsy"
                 : 'gentype_Topdec));
# 564 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "CPar.fsy"
                                                               _1 
                   )
# 67 "CPar.fsy"
                 : 'gentype_Topdec));
# 575 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 85 "CPar.fsy"
                 : 'gentype_Vardec));
# 587 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "CPar.fsy"
                                                       ((fst _2) _1, snd _2 , _4) 
                   )
# 90 "CPar.fsy"
                 : 'gentype_VariableDeclareAndAssign));
# 600 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 102 "CPar.fsy"
                 : 'gentype_Vardesc));
# 611 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 107 "CPar.fsy"
                 : 'gentype_Vardesc));
# 622 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "CPar.fsy"
                                                               _2                                      
                   )
# 109 "CPar.fsy"
                 : 'gentype_Vardesc));
# 633 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 111 "CPar.fsy"
                 : 'gentype_Vardesc));
# 644 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 113 "CPar.fsy"
                 : 'gentype_Vardesc));
# 656 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 118 "CPar.fsy"
                 : 'gentype_Fundec));
# 669 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 120 "CPar.fsy"
                 : 'gentype_Fundec));
# 683 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               [] 
                   )
# 125 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 693 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               _1 
                   )
# 126 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 704 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               [_1]     
                   )
# 130 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 715 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 131 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 727 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               Block _2 
                   )
# 136 "CPar.fsy"
                 : 'gentype_Block));
# 738 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               [] 
                   )
# 140 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 748 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 141 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 760 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 142 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 772 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VariableDeclareAndAssign in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                                      DeclareAndAssign(first _1, second _1 , third _1) :: _3 
                   )
# 143 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 784 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               _1 
                   )
# 147 "CPar.fsy"
                 : 'gentype_Stmt));
# 795 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               _1 
                   )
# 148 "CPar.fsy"
                 : 'gentype_Stmt));
# 806 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                                               Expr(_1)             
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtM));
# 817 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                                               Return None          
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtM));
# 827 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                                               Return(Some(_2))     
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtM));
# 838 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                                               _1                   
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtM));
# 849 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                                               If(_3, _5, _7)       
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtM));
# 862 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                                               While(_3, _5)        
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtM));
# 874 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                                               Switch(_3,_6)        
                   )
# 158 "CPar.fsy"
                 : 'gentype_StmtM));
# 886 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                                               Break                
                   )
# 159 "CPar.fsy"
                 : 'gentype_StmtM));
# 896 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                                          [Case(_2,_4)]    
                   )
# 163 "CPar.fsy"
                 : 'gentype_StmtCase));
# 908 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                                          Case(_2,_4) :: _5
                   )
# 164 "CPar.fsy"
                 : 'gentype_StmtCase));
# 921 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                                          [Default(_3)]   
                   )
# 165 "CPar.fsy"
                 : 'gentype_StmtCase));
# 932 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 169 "CPar.fsy"
                 : 'gentype_StmtU));
# 945 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 170 "CPar.fsy"
                 : 'gentype_StmtU));
# 957 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 171 "CPar.fsy"
                 : 'gentype_StmtU));
# 969 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Access _1           
                   )
# 175 "CPar.fsy"
                 : 'gentype_Expr));
# 980 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               _1                  
                   )
# 176 "CPar.fsy"
                 : 'gentype_Expr));
# 991 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               _1                        
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1002 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Assign(_1, _3)            
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1014 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               CallOperator(_1, _3)      
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1026 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Prim1("!", _2)            
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1037 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Prim1("printi", _2)       
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1048 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim1("printc", nl)       
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1058 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim1("I++", _1)     
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1069 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim1("I--", _1)     
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1080 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim1("++I", _2)     
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1091 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim1("--I", _2)     
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1102 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim2("+",  _1, _3)       
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1114 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim2("-",  _1, _3)       
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1126 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Prim2("*",  _1, _3)       
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1138 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Prim2("/",  _1, _3)       
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1150 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Prim2("%",  _1, _3)       
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1162 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Prim2("==", _1, _3)       
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1174 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               Prim2("!=", _1, _3)       
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1186 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               Prim2(">",  _1, _3)       
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1198 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               Prim2("<",  _1, _3)       
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1210 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               Prim2(">=", _1, _3)       
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1222 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               Prim2("<=", _1, _3)       
                   )
# 200 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1234 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               Prim3(_1,_3,_5)           
                   )
# 201 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1247 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               AndOperator(_1, _3)       
                   )
# 202 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1259 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                               OrOperator(_1, _3)        
                   )
# 203 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1271 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               CstI _1              
                   )
# 211 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1282 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstFloat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               ConstFloat(_1)       
                   )
# 212 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1293 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstChar in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               ConstChar(_1)        
                   )
# 213 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1304 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               ConstString(_1)      
                   )
# 214 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1315 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               _2                   
                   )
# 215 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1326 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               Addr _2              
                   )
# 216 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1337 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                               AccVar _1           
                   )
# 220 "CPar.fsy"
                 : 'gentype_Access));
# 1348 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "CPar.fsy"
                                                               _2                  
                   )
# 221 "CPar.fsy"
                 : 'gentype_Access));
# 1359 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 222 "CPar.fsy"
                 : 'gentype_Access));
# 1370 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 223 "CPar.fsy"
                 : 'gentype_Access));
# 1381 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 224 "CPar.fsy"
                 : 'gentype_Access));
# 1393 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               []       
                   )
# 228 "CPar.fsy"
                 : 'gentype_Exprs));
# 1403 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               _1       
                   )
# 229 "CPar.fsy"
                 : 'gentype_Exprs));
# 1414 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "CPar.fsy"
                                                               [_1]     
                   )
# 233 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1425 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 234 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1437 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "CPar.fsy"
                                                               _1       
                   )
# 238 "CPar.fsy"
                 : 'gentype_Const));
# 1448 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "CPar.fsy"
                                                               _1       
                   )
# 239 "CPar.fsy"
                 : 'gentype_Const));
# 1459 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "CPar.fsy"
                                                               - _2     
                   )
# 240 "CPar.fsy"
                 : 'gentype_Const));
# 1470 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "CPar.fsy"
                                                               -1       
                   )
# 241 "CPar.fsy"
                 : 'gentype_Const));
# 1480 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "CPar.fsy"
                                                               _1       
                   )
# 245 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1491 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 "CPar.fsy"
                                                               - _2     
                   )
# 246 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1502 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "CPar.fsy"
                                                               _1       
                   )
# 249 "CPar.fsy"
                 : 'gentype_ConstChar));
# 1513 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 "CPar.fsy"
                                                               _1       
                   )
# 252 "CPar.fsy"
                 : 'gentype_ConstString));
# 1524 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 "CPar.fsy"
                                                               TypI     
                   )
# 256 "CPar.fsy"
                 : 'gentype_Type));
# 1534 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "CPar.fsy"
                                                               TypC     
                   )
# 257 "CPar.fsy"
                 : 'gentype_Type));
# 1544 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 "CPar.fsy"
                                                               TypFloat    
                   )
# 258 "CPar.fsy"
                 : 'gentype_Type));
# 1554 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 "CPar.fsy"
                                                               TypString    
                   )
# 259 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1565 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 54;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
