// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

let first  (a, _, _) = a
let second (_, b, _) = b
let third  (_, _, c) = c

# 26 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | QUEST
  | COLON
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | SELFPLUS
  | SELFMINUS
  | WHILE
  | DO
  | FOR
  | SWITCH
  | CASE
  | BREAK
  | CONTINUE
  | DEFAULT
  | TRY
  | CATCH
  | THROW
  | FINALLY
  | CHAR
  | STRING
  | ELSE
  | IF
  | INT
  | FLOAT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | CSTCHAR of (char)
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTFLOAT of (float32)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_QUEST
    | TOKEN_COLON
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_SELFPLUS
    | TOKEN_SELFMINUS
    | TOKEN_WHILE
    | TOKEN_DO
    | TOKEN_FOR
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_BREAK
    | TOKEN_CONTINUE
    | TOKEN_DEFAULT
    | TOKEN_TRY
    | TOKEN_CATCH
    | TOKEN_THROW
    | TOKEN_FINALLY
    | TOKEN_CHAR
    | TOKEN_STRING
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_FLOAT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_CSTCHAR
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTFLOAT
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VariableDeclareAndAssign
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtCase
    | NONTERM_StmtCatch
    | NONTERM_EXCEPTION
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_ConstFloat
    | NONTERM_ConstChar
    | NONTERM_ConstString
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | QUEST  -> 11 
  | COLON  -> 12 
  | NOT  -> 13 
  | SEQOR  -> 14 
  | SEQAND  -> 15 
  | EQ  -> 16 
  | NE  -> 17 
  | GT  -> 18 
  | LT  -> 19 
  | GE  -> 20 
  | LE  -> 21 
  | PLUS  -> 22 
  | MINUS  -> 23 
  | TIMES  -> 24 
  | DIV  -> 25 
  | MOD  -> 26 
  | SELFPLUS  -> 27 
  | SELFMINUS  -> 28 
  | WHILE  -> 29 
  | DO  -> 30 
  | FOR  -> 31 
  | SWITCH  -> 32 
  | CASE  -> 33 
  | BREAK  -> 34 
  | CONTINUE  -> 35 
  | DEFAULT  -> 36 
  | TRY  -> 37 
  | CATCH  -> 38 
  | THROW  -> 39 
  | FINALLY  -> 40 
  | CHAR  -> 41 
  | STRING  -> 42 
  | ELSE  -> 43 
  | IF  -> 44 
  | INT  -> 45 
  | FLOAT  -> 46 
  | NULL  -> 47 
  | PRINT  -> 48 
  | PRINTLN  -> 49 
  | RETURN  -> 50 
  | VOID  -> 51 
  | CSTCHAR _ -> 52 
  | CSTSTRING _ -> 53 
  | NAME _ -> 54 
  | CSTFLOAT _ -> 55 
  | CSTINT _ -> 56 
  | CSTBOOL _ -> 57 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_QUEST 
  | 12 -> TOKEN_COLON 
  | 13 -> TOKEN_NOT 
  | 14 -> TOKEN_SEQOR 
  | 15 -> TOKEN_SEQAND 
  | 16 -> TOKEN_EQ 
  | 17 -> TOKEN_NE 
  | 18 -> TOKEN_GT 
  | 19 -> TOKEN_LT 
  | 20 -> TOKEN_GE 
  | 21 -> TOKEN_LE 
  | 22 -> TOKEN_PLUS 
  | 23 -> TOKEN_MINUS 
  | 24 -> TOKEN_TIMES 
  | 25 -> TOKEN_DIV 
  | 26 -> TOKEN_MOD 
  | 27 -> TOKEN_SELFPLUS 
  | 28 -> TOKEN_SELFMINUS 
  | 29 -> TOKEN_WHILE 
  | 30 -> TOKEN_DO 
  | 31 -> TOKEN_FOR 
  | 32 -> TOKEN_SWITCH 
  | 33 -> TOKEN_CASE 
  | 34 -> TOKEN_BREAK 
  | 35 -> TOKEN_CONTINUE 
  | 36 -> TOKEN_DEFAULT 
  | 37 -> TOKEN_TRY 
  | 38 -> TOKEN_CATCH 
  | 39 -> TOKEN_THROW 
  | 40 -> TOKEN_FINALLY 
  | 41 -> TOKEN_CHAR 
  | 42 -> TOKEN_STRING 
  | 43 -> TOKEN_ELSE 
  | 44 -> TOKEN_IF 
  | 45 -> TOKEN_INT 
  | 46 -> TOKEN_FLOAT 
  | 47 -> TOKEN_NULL 
  | 48 -> TOKEN_PRINT 
  | 49 -> TOKEN_PRINTLN 
  | 50 -> TOKEN_RETURN 
  | 51 -> TOKEN_VOID 
  | 52 -> TOKEN_CSTCHAR 
  | 53 -> TOKEN_CSTSTRING 
  | 54 -> TOKEN_NAME 
  | 55 -> TOKEN_CSTFLOAT 
  | 56 -> TOKEN_CSTINT 
  | 57 -> TOKEN_CSTBOOL 
  | 60 -> TOKEN_end_of_input
  | 58 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_VariableDeclareAndAssign 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Vardesc 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtM 
    | 37 -> NONTERM_StmtM 
    | 38 -> NONTERM_StmtM 
    | 39 -> NONTERM_StmtCase 
    | 40 -> NONTERM_StmtCase 
    | 41 -> NONTERM_StmtCase 
    | 42 -> NONTERM_StmtCase 
    | 43 -> NONTERM_StmtCatch 
    | 44 -> NONTERM_StmtCatch 
    | 45 -> NONTERM_StmtCatch 
    | 46 -> NONTERM_EXCEPTION 
    | 47 -> NONTERM_StmtU 
    | 48 -> NONTERM_StmtU 
    | 49 -> NONTERM_StmtU 
    | 50 -> NONTERM_Expr 
    | 51 -> NONTERM_Expr 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_ExprNotAccess 
    | 72 -> NONTERM_ExprNotAccess 
    | 73 -> NONTERM_ExprNotAccess 
    | 74 -> NONTERM_ExprNotAccess 
    | 75 -> NONTERM_ExprNotAccess 
    | 76 -> NONTERM_AtExprNotAccess 
    | 77 -> NONTERM_AtExprNotAccess 
    | 78 -> NONTERM_AtExprNotAccess 
    | 79 -> NONTERM_AtExprNotAccess 
    | 80 -> NONTERM_AtExprNotAccess 
    | 81 -> NONTERM_AtExprNotAccess 
    | 82 -> NONTERM_Access 
    | 83 -> NONTERM_Access 
    | 84 -> NONTERM_Access 
    | 85 -> NONTERM_Access 
    | 86 -> NONTERM_Access 
    | 87 -> NONTERM_Exprs 
    | 88 -> NONTERM_Exprs 
    | 89 -> NONTERM_Exprs1 
    | 90 -> NONTERM_Exprs1 
    | 91 -> NONTERM_Const 
    | 92 -> NONTERM_Const 
    | 93 -> NONTERM_Const 
    | 94 -> NONTERM_Const 
    | 95 -> NONTERM_ConstFloat 
    | 96 -> NONTERM_ConstFloat 
    | 97 -> NONTERM_ConstChar 
    | 98 -> NONTERM_ConstString 
    | 99 -> NONTERM_Type 
    | 100 -> NONTERM_Type 
    | 101 -> NONTERM_Type 
    | 102 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 60 
let _fsyacc_tagOfErrorTerminal = 58

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | QUEST  -> "QUEST" 
  | COLON  -> "COLON" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | SELFPLUS  -> "SELFPLUS" 
  | SELFMINUS  -> "SELFMINUS" 
  | WHILE  -> "WHILE" 
  | DO  -> "DO" 
  | FOR  -> "FOR" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | BREAK  -> "BREAK" 
  | CONTINUE  -> "CONTINUE" 
  | DEFAULT  -> "DEFAULT" 
  | TRY  -> "TRY" 
  | CATCH  -> "CATCH" 
  | THROW  -> "THROW" 
  | FINALLY  -> "FINALLY" 
  | CHAR  -> "CHAR" 
  | STRING  -> "STRING" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | FLOAT  -> "FLOAT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | QUEST  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | SELFPLUS  -> (null : System.Object) 
  | SELFMINUS  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | CONTINUE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | TRY  -> (null : System.Object) 
  | CATCH  -> (null : System.Object) 
  | THROW  -> (null : System.Object) 
  | FINALLY  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | STRING  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 6us; 65535us; 0us; 8us; 4us; 8us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 5us; 65535us; 11us; 15us; 12us; 14us; 13us; 14us; 20us; 21us; 22us; 23us; 2us; 65535us; 0us; 10us; 4us; 10us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 19us; 65535us; 33us; 34us; 37us; 38us; 43us; 63us; 46us; 63us; 49us; 63us; 52us; 63us; 70us; 63us; 71us; 63us; 73us; 63us; 74us; 63us; 82us; 63us; 83us; 63us; 92us; 63us; 94us; 63us; 112us; 63us; 117us; 63us; 121us; 63us; 127us; 63us; 130us; 63us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 5us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 71us; 134us; 17us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 70us; 72us; 71us; 55us; 73us; 75us; 74us; 75us; 82us; 84us; 83us; 84us; 92us; 93us; 94us; 95us; 112us; 113us; 117us; 118us; 121us; 122us; 127us; 128us; 130us; 131us; 3us; 65535us; 105us; 106us; 118us; 119us; 122us; 123us; 2us; 65535us; 113us; 114us; 128us; 129us; 1us; 65535us; 125us; 126us; 7us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 71us; 56us; 74us; 133us; 83us; 135us; 53us; 65535us; 16us; 17us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 61us; 66us; 69us; 67us; 68us; 70us; 57us; 71us; 57us; 73us; 57us; 74us; 57us; 78us; 81us; 79us; 80us; 82us; 57us; 83us; 57us; 86us; 87us; 88us; 89us; 90us; 91us; 92us; 57us; 94us; 57us; 97us; 98us; 102us; 103us; 112us; 57us; 117us; 57us; 121us; 57us; 127us; 57us; 130us; 57us; 141us; 142us; 144us; 171us; 147us; 148us; 149us; 150us; 174us; 152us; 175us; 153us; 176us; 154us; 177us; 155us; 178us; 156us; 179us; 157us; 180us; 158us; 181us; 159us; 182us; 160us; 183us; 161us; 184us; 162us; 185us; 163us; 186us; 164us; 187us; 165us; 188us; 166us; 189us; 167us; 190us; 169us; 195us; 168us; 196us; 168us; 207us; 170us; 210us; 171us; 53us; 65535us; 16us; 138us; 43us; 138us; 46us; 138us; 49us; 138us; 52us; 138us; 59us; 138us; 66us; 138us; 67us; 138us; 70us; 138us; 71us; 138us; 73us; 138us; 74us; 138us; 78us; 138us; 79us; 138us; 82us; 138us; 83us; 138us; 86us; 138us; 88us; 138us; 90us; 138us; 92us; 138us; 94us; 138us; 97us; 138us; 102us; 138us; 112us; 138us; 117us; 138us; 121us; 138us; 127us; 138us; 130us; 138us; 141us; 138us; 144us; 138us; 147us; 138us; 149us; 138us; 174us; 138us; 175us; 138us; 176us; 138us; 177us; 138us; 178us; 138us; 179us; 138us; 180us; 138us; 181us; 138us; 182us; 138us; 183us; 138us; 184us; 138us; 185us; 138us; 186us; 138us; 187us; 138us; 188us; 138us; 189us; 138us; 190us; 138us; 195us; 139us; 196us; 139us; 207us; 138us; 210us; 138us; 55us; 65535us; 16us; 140us; 43us; 140us; 46us; 140us; 49us; 140us; 52us; 140us; 59us; 140us; 66us; 140us; 67us; 140us; 70us; 140us; 71us; 140us; 73us; 140us; 74us; 140us; 78us; 140us; 79us; 140us; 82us; 140us; 83us; 140us; 86us; 140us; 88us; 140us; 90us; 140us; 92us; 140us; 94us; 140us; 97us; 140us; 102us; 140us; 112us; 140us; 115us; 116us; 117us; 140us; 121us; 140us; 127us; 140us; 130us; 140us; 141us; 140us; 144us; 140us; 147us; 140us; 149us; 140us; 174us; 140us; 175us; 140us; 176us; 140us; 177us; 140us; 178us; 140us; 179us; 140us; 180us; 140us; 181us; 140us; 182us; 140us; 183us; 140us; 184us; 140us; 185us; 140us; 186us; 140us; 187us; 140us; 188us; 140us; 189us; 140us; 190us; 140us; 195us; 140us; 196us; 140us; 204us; 206us; 207us; 140us; 210us; 140us; 56us; 65535us; 16us; 137us; 43us; 137us; 46us; 137us; 49us; 137us; 52us; 137us; 59us; 137us; 66us; 137us; 67us; 137us; 70us; 137us; 71us; 137us; 73us; 137us; 74us; 137us; 78us; 137us; 79us; 137us; 82us; 137us; 83us; 137us; 86us; 137us; 88us; 137us; 90us; 137us; 92us; 137us; 94us; 137us; 97us; 137us; 102us; 137us; 112us; 137us; 117us; 137us; 121us; 137us; 127us; 137us; 130us; 137us; 141us; 137us; 144us; 137us; 147us; 137us; 149us; 137us; 174us; 137us; 175us; 137us; 176us; 137us; 177us; 137us; 178us; 137us; 179us; 137us; 180us; 137us; 181us; 137us; 182us; 137us; 183us; 137us; 184us; 137us; 185us; 137us; 186us; 137us; 187us; 137us; 188us; 137us; 189us; 137us; 190us; 137us; 195us; 137us; 196us; 136us; 198us; 199us; 201us; 202us; 204us; 205us; 207us; 137us; 210us; 137us; 1us; 65535us; 144us; 145us; 2us; 65535us; 144us; 209us; 210us; 211us; 55us; 65535us; 16us; 191us; 43us; 191us; 46us; 191us; 49us; 191us; 52us; 191us; 59us; 191us; 66us; 191us; 67us; 191us; 70us; 191us; 71us; 191us; 73us; 191us; 74us; 191us; 78us; 191us; 79us; 191us; 82us; 191us; 83us; 191us; 86us; 191us; 88us; 191us; 90us; 191us; 92us; 191us; 94us; 191us; 97us; 191us; 102us; 191us; 112us; 191us; 115us; 191us; 117us; 191us; 121us; 191us; 127us; 191us; 130us; 191us; 141us; 191us; 144us; 191us; 147us; 191us; 149us; 191us; 174us; 191us; 175us; 191us; 176us; 191us; 177us; 191us; 178us; 191us; 179us; 191us; 180us; 191us; 181us; 191us; 182us; 191us; 183us; 191us; 184us; 191us; 185us; 191us; 186us; 191us; 187us; 191us; 188us; 191us; 189us; 191us; 190us; 191us; 195us; 191us; 196us; 191us; 204us; 191us; 207us; 191us; 210us; 191us; 55us; 65535us; 16us; 192us; 43us; 192us; 46us; 192us; 49us; 192us; 52us; 192us; 59us; 192us; 66us; 192us; 67us; 192us; 70us; 192us; 71us; 192us; 73us; 192us; 74us; 192us; 78us; 192us; 79us; 192us; 82us; 192us; 83us; 192us; 86us; 192us; 88us; 192us; 90us; 192us; 92us; 192us; 94us; 192us; 97us; 192us; 102us; 192us; 112us; 192us; 115us; 192us; 117us; 192us; 121us; 192us; 127us; 192us; 130us; 192us; 141us; 192us; 144us; 192us; 147us; 192us; 149us; 192us; 174us; 192us; 175us; 192us; 176us; 192us; 177us; 192us; 178us; 192us; 179us; 192us; 180us; 192us; 181us; 192us; 182us; 192us; 183us; 192us; 184us; 192us; 185us; 192us; 186us; 192us; 187us; 192us; 188us; 192us; 189us; 192us; 190us; 192us; 195us; 192us; 196us; 192us; 204us; 192us; 207us; 192us; 210us; 192us; 55us; 65535us; 16us; 193us; 43us; 193us; 46us; 193us; 49us; 193us; 52us; 193us; 59us; 193us; 66us; 193us; 67us; 193us; 70us; 193us; 71us; 193us; 73us; 193us; 74us; 193us; 78us; 193us; 79us; 193us; 82us; 193us; 83us; 193us; 86us; 193us; 88us; 193us; 90us; 193us; 92us; 193us; 94us; 193us; 97us; 193us; 102us; 193us; 112us; 193us; 115us; 193us; 117us; 193us; 121us; 193us; 127us; 193us; 130us; 193us; 141us; 193us; 144us; 193us; 147us; 193us; 149us; 193us; 174us; 193us; 175us; 193us; 176us; 193us; 177us; 193us; 178us; 193us; 179us; 193us; 180us; 193us; 181us; 193us; 182us; 193us; 183us; 193us; 184us; 193us; 185us; 193us; 186us; 193us; 187us; 193us; 188us; 193us; 189us; 193us; 190us; 193us; 195us; 193us; 196us; 193us; 204us; 193us; 207us; 193us; 210us; 193us; 55us; 65535us; 16us; 194us; 43us; 194us; 46us; 194us; 49us; 194us; 52us; 194us; 59us; 194us; 66us; 194us; 67us; 194us; 70us; 194us; 71us; 194us; 73us; 194us; 74us; 194us; 78us; 194us; 79us; 194us; 82us; 194us; 83us; 194us; 86us; 194us; 88us; 194us; 90us; 194us; 92us; 194us; 94us; 194us; 97us; 194us; 102us; 194us; 112us; 194us; 115us; 194us; 117us; 194us; 121us; 194us; 127us; 194us; 130us; 194us; 141us; 194us; 144us; 194us; 147us; 194us; 149us; 194us; 174us; 194us; 175us; 194us; 176us; 194us; 177us; 194us; 178us; 194us; 179us; 194us; 180us; 194us; 181us; 194us; 182us; 194us; 183us; 194us; 184us; 194us; 185us; 194us; 186us; 194us; 187us; 194us; 188us; 194us; 189us; 194us; 190us; 194us; 195us; 194us; 196us; 194us; 204us; 194us; 207us; 194us; 210us; 194us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 26us; 32us; 35us; 38us; 42us; 62us; 67us; 73us; 91us; 95us; 98us; 100us; 108us; 162us; 216us; 272us; 329us; 331us; 334us; 390us; 446us; 502us; 558us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 5us; 1us; 6us; 1us; 7us; 2us; 7us; 8us; 3us; 7us; 8us; 15us; 4us; 7us; 8us; 12us; 13us; 3us; 7us; 12us; 13us; 1us; 8us; 17us; 8us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 9us; 2us; 9us; 15us; 1us; 10us; 3us; 10us; 12us; 13us; 1us; 11us; 3us; 11us; 12us; 13us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 3us; 25us; 31us; 47us; 1us; 26us; 17us; 27us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 17us; 29us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 29us; 1us; 30us; 1us; 31us; 3us; 31us; 47us; 48us; 1us; 31us; 3us; 31us; 47us; 48us; 19us; 31us; 47us; 48us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 17us; 31us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 31us; 3us; 31us; 47us; 48us; 1us; 31us; 1us; 31us; 2us; 31us; 47us; 1us; 31us; 1us; 32us; 2us; 32us; 49us; 1us; 32us; 2us; 32us; 49us; 18us; 32us; 49us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 17us; 32us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 32us; 2us; 32us; 49us; 1us; 32us; 1us; 33us; 1us; 33us; 17us; 33us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 33us; 17us; 33us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 33us; 17us; 33us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 17us; 34us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 34us; 1us; 34us; 1us; 35us; 1us; 35us; 17us; 35us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 37us; 1us; 38us; 1us; 38us; 1us; 38us; 2us; 39us; 40us; 2us; 39us; 40us; 2us; 39us; 40us; 2us; 39us; 40us; 1us; 40us; 2us; 41us; 42us; 2us; 41us; 42us; 2us; 41us; 42us; 1us; 42us; 2us; 43us; 44us; 2us; 43us; 44us; 2us; 43us; 44us; 2us; 43us; 44us; 2us; 43us; 44us; 1us; 44us; 1us; 45us; 1us; 45us; 1us; 46us; 1us; 47us; 1us; 48us; 1us; 49us; 4us; 50us; 53us; 83us; 86us; 3us; 50us; 53us; 86us; 1us; 51us; 2us; 51us; 80us; 1us; 52us; 1us; 53us; 17us; 53us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 2us; 54us; 82us; 1us; 54us; 1us; 54us; 1us; 54us; 1us; 55us; 17us; 55us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 56us; 17us; 56us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 57us; 17us; 58us; 59us; 60us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 17us; 58us; 59us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 17us; 58us; 59us; 62us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 17us; 58us; 59us; 62us; 63us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 17us; 58us; 59us; 62us; 63us; 64us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 17us; 58us; 59us; 62us; 63us; 64us; 65us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 17us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 17us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 17us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 17us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 17us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 70us; 71us; 72us; 73us; 74us; 75us; 17us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 71us; 72us; 73us; 74us; 75us; 17us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 72us; 73us; 74us; 75us; 17us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 73us; 74us; 75us; 17us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 73us; 74us; 75us; 17us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 74us; 75us; 16us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 17us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 75us; 17us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 86us; 18us; 58us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 89us; 90us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 73us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 77us; 1us; 78us; 1us; 79us; 1us; 80us; 2us; 80us; 83us; 1us; 80us; 1us; 81us; 2us; 81us; 86us; 1us; 82us; 1us; 83us; 2us; 83us; 86us; 1us; 83us; 2us; 84us; 85us; 2us; 84us; 86us; 1us; 85us; 1us; 86us; 1us; 86us; 1us; 88us; 1us; 90us; 1us; 90us; 1us; 91us; 1us; 92us; 2us; 93us; 96us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 96us; 1us; 97us; 1us; 98us; 1us; 99us; 1us; 100us; 1us; 101us; 1us; 102us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 36us; 40us; 42us; 60us; 62us; 65us; 67us; 71us; 73us; 77us; 79us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 104us; 106us; 108us; 110us; 113us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 141us; 145us; 147us; 165us; 167us; 170us; 172us; 190us; 192us; 194us; 196us; 200us; 202us; 206us; 226us; 244us; 246us; 250us; 252us; 254us; 257us; 259us; 261us; 264us; 266us; 269us; 288us; 306us; 308us; 311us; 313us; 315us; 317us; 335us; 337us; 355us; 357us; 375us; 377us; 379us; 381us; 383us; 385us; 387us; 405us; 407us; 409us; 411us; 413us; 431us; 433us; 435us; 437us; 439us; 441us; 443us; 445us; 447us; 449us; 451us; 453us; 456us; 459us; 462us; 465us; 467us; 470us; 473us; 476us; 478us; 481us; 484us; 487us; 490us; 493us; 495us; 497us; 499us; 501us; 503us; 505us; 507us; 512us; 516us; 518us; 521us; 523us; 525us; 543us; 546us; 548us; 550us; 552us; 554us; 572us; 574us; 592us; 594us; 612us; 630us; 648us; 666us; 684us; 702us; 720us; 738us; 756us; 774us; 792us; 810us; 828us; 846us; 864us; 882us; 899us; 917us; 935us; 954us; 956us; 958us; 960us; 962us; 964us; 966us; 968us; 970us; 972us; 974us; 976us; 978us; 980us; 982us; 984us; 986us; 988us; 990us; 992us; 994us; 996us; 998us; 1000us; 1002us; 1005us; 1007us; 1009us; 1012us; 1014us; 1016us; 1019us; 1021us; 1024us; 1027us; 1029us; 1031us; 1033us; 1035us; 1037us; 1039us; 1041us; 1043us; 1046us; 1048us; 1050us; 1052us; 1054us; 1056us; 1058us; 1060us; 1062us; 1064us; |]
let _fsyacc_action_rows = 225
let _fsyacc_actionTableElements = [|5us; 16386us; 41us; 222us; 42us; 224us; 45us; 221us; 46us; 223us; 51us; 29us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 5us; 16386us; 41us; 222us; 42us; 224us; 45us; 221us; 46us; 223us; 51us; 29us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 1us; 32768us; 7us; 9us; 0us; 16389us; 0us; 16390us; 3us; 32768us; 1us; 22us; 24us; 20us; 54us; 18us; 3us; 32768us; 1us; 22us; 24us; 20us; 54us; 18us; 3us; 32768us; 1us; 22us; 24us; 20us; 54us; 19us; 2us; 16391us; 5us; 25us; 9us; 16us; 1us; 16391us; 5us; 25us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 16392us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 0us; 16393us; 1us; 16393us; 1us; 35us; 3us; 32768us; 1us; 22us; 24us; 20us; 54us; 18us; 1us; 16394us; 5us; 25us; 3us; 32768us; 1us; 22us; 24us; 20us; 54us; 18us; 2us; 32768us; 2us; 24us; 5us; 25us; 0us; 16395us; 2us; 32768us; 6us; 26us; 56us; 27us; 0us; 16396us; 1us; 32768us; 6us; 28us; 0us; 16397us; 1us; 32768us; 54us; 30us; 1us; 32768us; 1us; 31us; 4us; 16400us; 41us; 222us; 42us; 224us; 45us; 221us; 46us; 223us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 4us; 16400us; 41us; 222us; 42us; 224us; 45us; 221us; 46us; 223us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 4us; 32768us; 41us; 222us; 42us; 224us; 45us; 221us; 46us; 223us; 0us; 16403us; 30us; 16405us; 1us; 196us; 3us; 43us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 29us; 77us; 30us; 94us; 31us; 85us; 32us; 101us; 34us; 108us; 35us; 110us; 37us; 112us; 41us; 222us; 42us; 224us; 44us; 65us; 45us; 221us; 46us; 223us; 47us; 216us; 48us; 149us; 49us; 151us; 50us; 59us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 1us; 32768us; 4us; 45us; 0us; 16404us; 30us; 16405us; 1us; 196us; 3us; 43us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 29us; 77us; 30us; 94us; 31us; 85us; 32us; 101us; 34us; 108us; 35us; 110us; 37us; 112us; 41us; 222us; 42us; 224us; 44us; 65us; 45us; 221us; 46us; 223us; 47us; 216us; 48us; 149us; 49us; 151us; 50us; 59us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 0us; 16406us; 1us; 32768us; 7us; 49us; 30us; 16405us; 1us; 196us; 3us; 43us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 29us; 77us; 30us; 94us; 31us; 85us; 32us; 101us; 34us; 108us; 35us; 110us; 37us; 112us; 41us; 222us; 42us; 224us; 44us; 65us; 45us; 221us; 46us; 223us; 47us; 216us; 48us; 149us; 49us; 151us; 50us; 59us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 0us; 16407us; 1us; 32768us; 7us; 52us; 30us; 16405us; 1us; 196us; 3us; 43us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 29us; 77us; 30us; 94us; 31us; 85us; 32us; 101us; 34us; 108us; 35us; 110us; 37us; 112us; 41us; 222us; 42us; 224us; 44us; 65us; 45us; 221us; 46us; 223us; 47us; 216us; 48us; 149us; 49us; 151us; 50us; 59us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 43us; 74us; 0us; 16410us; 17us; 32768us; 7us; 58us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 0us; 16411us; 17us; 32768us; 1us; 196us; 7us; 60us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 0us; 16412us; 17us; 32768us; 7us; 62us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 0us; 16413us; 0us; 16414us; 1us; 32768us; 1us; 66us; 1us; 32768us; 1us; 67us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 17us; 32768us; 2us; 71us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 17us; 32768us; 2us; 70us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 29us; 76us; 30us; 94us; 31us; 85us; 32us; 101us; 34us; 108us; 35us; 110us; 37us; 112us; 44us; 64us; 47us; 216us; 48us; 149us; 49us; 151us; 50us; 59us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 29us; 77us; 30us; 94us; 31us; 85us; 32us; 101us; 34us; 108us; 35us; 110us; 37us; 112us; 44us; 65us; 47us; 216us; 48us; 149us; 49us; 151us; 50us; 59us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 1us; 32768us; 43us; 73us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 29us; 76us; 30us; 94us; 31us; 85us; 32us; 101us; 34us; 108us; 35us; 110us; 37us; 112us; 44us; 64us; 47us; 216us; 48us; 149us; 49us; 151us; 50us; 59us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 29us; 77us; 30us; 94us; 31us; 85us; 32us; 101us; 34us; 108us; 35us; 110us; 37us; 112us; 44us; 65us; 47us; 216us; 48us; 149us; 49us; 151us; 50us; 59us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 0us; 16415us; 1us; 32768us; 1us; 78us; 1us; 32768us; 1us; 79us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 17us; 32768us; 2us; 83us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 17us; 32768us; 2us; 82us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 29us; 76us; 30us; 94us; 31us; 85us; 32us; 101us; 34us; 108us; 35us; 110us; 37us; 112us; 44us; 64us; 47us; 216us; 48us; 149us; 49us; 151us; 50us; 59us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 29us; 77us; 30us; 94us; 31us; 85us; 32us; 101us; 34us; 108us; 35us; 110us; 37us; 112us; 44us; 65us; 47us; 216us; 48us; 149us; 49us; 151us; 50us; 59us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 0us; 16416us; 1us; 32768us; 1us; 86us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 17us; 32768us; 7us; 88us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 17us; 32768us; 7us; 90us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 17us; 32768us; 2us; 92us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 29us; 76us; 30us; 94us; 31us; 85us; 32us; 101us; 34us; 108us; 35us; 110us; 37us; 112us; 44us; 64us; 47us; 216us; 48us; 149us; 49us; 151us; 50us; 59us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 0us; 16417us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 29us; 76us; 30us; 94us; 31us; 85us; 32us; 101us; 34us; 108us; 35us; 110us; 37us; 112us; 44us; 64us; 47us; 216us; 48us; 149us; 49us; 151us; 50us; 59us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 1us; 32768us; 29us; 96us; 1us; 32768us; 1us; 97us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 17us; 32768us; 2us; 99us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 1us; 32768us; 7us; 100us; 0us; 16418us; 1us; 32768us; 1us; 102us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 17us; 32768us; 2us; 104us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 1us; 32768us; 3us; 105us; 2us; 32768us; 33us; 115us; 36us; 120us; 1us; 32768us; 4us; 107us; 0us; 16419us; 1us; 32768us; 7us; 109us; 0us; 16420us; 1us; 32768us; 7us; 111us; 0us; 16421us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 29us; 76us; 30us; 94us; 31us; 85us; 32us; 101us; 34us; 108us; 35us; 110us; 37us; 112us; 44us; 64us; 47us; 216us; 48us; 149us; 49us; 151us; 50us; 59us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 2us; 32768us; 38us; 124us; 40us; 130us; 0us; 16422us; 9us; 32768us; 1us; 195us; 10us; 198us; 23us; 214us; 47us; 216us; 52us; 219us; 53us; 220us; 55us; 217us; 56us; 212us; 57us; 213us; 1us; 32768us; 12us; 117us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 29us; 76us; 30us; 94us; 31us; 85us; 32us; 101us; 34us; 108us; 35us; 110us; 37us; 112us; 44us; 64us; 47us; 216us; 48us; 149us; 49us; 151us; 50us; 59us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 2us; 16423us; 33us; 115us; 36us; 120us; 0us; 16424us; 1us; 32768us; 12us; 121us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 29us; 76us; 30us; 94us; 31us; 85us; 32us; 101us; 34us; 108us; 35us; 110us; 37us; 112us; 44us; 64us; 47us; 216us; 48us; 149us; 49us; 151us; 50us; 59us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 2us; 16425us; 33us; 115us; 36us; 120us; 0us; 16426us; 1us; 32768us; 1us; 125us; 1us; 32768us; 53us; 132us; 1us; 32768us; 2us; 127us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 29us; 76us; 30us; 94us; 31us; 85us; 32us; 101us; 34us; 108us; 35us; 110us; 37us; 112us; 44us; 64us; 47us; 216us; 48us; 149us; 49us; 151us; 50us; 59us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 2us; 16427us; 38us; 124us; 40us; 130us; 0us; 16428us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 29us; 76us; 30us; 94us; 31us; 85us; 32us; 101us; 34us; 108us; 35us; 110us; 37us; 112us; 44us; 64us; 47us; 216us; 48us; 149us; 49us; 151us; 50us; 59us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 0us; 16429us; 0us; 16430us; 0us; 16431us; 0us; 16432us; 0us; 16433us; 3us; 16434us; 2us; 203us; 5us; 207us; 9us; 141us; 2us; 16434us; 5us; 207us; 9us; 141us; 0us; 16435us; 1us; 16435us; 2us; 197us; 0us; 16436us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 16437us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 1us; 16466us; 1us; 144us; 16us; 16471us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 1us; 32768us; 2us; 146us; 0us; 16438us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 2us; 16439us; 27us; 172us; 28us; 173us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 16440us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 0us; 16441us; 2us; 16444us; 27us; 172us; 28us; 173us; 2us; 16445us; 27us; 172us; 28us; 173us; 5us; 16446us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 5us; 16447us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 2us; 16448us; 27us; 172us; 28us; 173us; 2us; 16449us; 27us; 172us; 28us; 173us; 2us; 16450us; 27us; 172us; 28us; 173us; 11us; 16451us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 11us; 16452us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 11us; 16453us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 11us; 16454us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 11us; 16455us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 11us; 16456us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 17us; 32768us; 11us; 187us; 12us; 188us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 16us; 16457us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 13us; 16458us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 16us; 32768us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 14us; 16459us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 17us; 32768us; 6us; 208us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 17us; 16473us; 8us; 210us; 11us; 187us; 14us; 190us; 15us; 189us; 16us; 181us; 17us; 182us; 18us; 183us; 19us; 184us; 20us; 185us; 21us; 186us; 22us; 176us; 23us; 177us; 24us; 178us; 25us; 179us; 26us; 180us; 27us; 172us; 28us; 173us; 0us; 16442us; 0us; 16443us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 0us; 16460us; 0us; 16461us; 0us; 16462us; 0us; 16463us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 0us; 16464us; 3us; 32768us; 1us; 201us; 24us; 204us; 54us; 200us; 1us; 16465us; 5us; 207us; 0us; 16466us; 3us; 32768us; 1us; 201us; 24us; 204us; 54us; 200us; 2us; 32768us; 2us; 203us; 5us; 207us; 0us; 16467us; 11us; 32768us; 1us; 196us; 10us; 198us; 23us; 214us; 24us; 204us; 47us; 216us; 52us; 219us; 53us; 220us; 54us; 200us; 55us; 217us; 56us; 212us; 57us; 213us; 1us; 16468us; 5us; 207us; 0us; 16469us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 0us; 16470us; 0us; 16472us; 16us; 32768us; 1us; 196us; 10us; 198us; 13us; 147us; 23us; 214us; 24us; 204us; 27us; 174us; 28us; 175us; 47us; 216us; 48us; 149us; 49us; 151us; 52us; 219us; 53us; 220us; 54us; 143us; 55us; 217us; 56us; 212us; 57us; 213us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 2us; 32768us; 55us; 218us; 56us; 215us; 0us; 16477us; 0us; 16478us; 0us; 16479us; 0us; 16480us; 0us; 16481us; 0us; 16482us; 0us; 16483us; 0us; 16484us; 0us; 16485us; 0us; 16486us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 6us; 7us; 9us; 10us; 16us; 17us; 19us; 20us; 22us; 23us; 24us; 28us; 32us; 36us; 39us; 41us; 58us; 75us; 76us; 78us; 82us; 84us; 88us; 91us; 92us; 95us; 96us; 98us; 99us; 101us; 103us; 108us; 110us; 112us; 113us; 118us; 120us; 122us; 123us; 124us; 126us; 131us; 132us; 163us; 165us; 166us; 197us; 198us; 200us; 231us; 232us; 234us; 265us; 266us; 267us; 269us; 270us; 288us; 289us; 307us; 308us; 326us; 327us; 328us; 330us; 332us; 349us; 366us; 384us; 402us; 429us; 456us; 458us; 485us; 512us; 513us; 515us; 517us; 534us; 551us; 569us; 587us; 614us; 641us; 642us; 644us; 661us; 679us; 696us; 714us; 731us; 749us; 776us; 777us; 804us; 806us; 808us; 825us; 843us; 845us; 846us; 848us; 865us; 883us; 885us; 888us; 890us; 891us; 893us; 894us; 896us; 897us; 924us; 927us; 928us; 938us; 940us; 967us; 970us; 971us; 973us; 1000us; 1003us; 1004us; 1006us; 1008us; 1010us; 1037us; 1040us; 1041us; 1068us; 1069us; 1070us; 1071us; 1072us; 1073us; 1077us; 1080us; 1081us; 1083us; 1084us; 1101us; 1118us; 1120us; 1137us; 1139us; 1140us; 1157us; 1160us; 1177us; 1194us; 1195us; 1198us; 1201us; 1207us; 1213us; 1216us; 1219us; 1222us; 1234us; 1246us; 1258us; 1270us; 1282us; 1294us; 1312us; 1329us; 1343us; 1360us; 1375us; 1393us; 1411us; 1412us; 1413us; 1430us; 1447us; 1464us; 1481us; 1498us; 1515us; 1532us; 1549us; 1566us; 1583us; 1600us; 1617us; 1634us; 1651us; 1668us; 1685us; 1702us; 1703us; 1704us; 1705us; 1706us; 1723us; 1740us; 1741us; 1745us; 1747us; 1748us; 1752us; 1755us; 1756us; 1768us; 1770us; 1771us; 1788us; 1789us; 1790us; 1807us; 1808us; 1809us; 1810us; 1813us; 1814us; 1815us; 1816us; 1817us; 1818us; 1819us; 1820us; 1821us; 1822us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 2us; 1us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 9us; 7us; 7us; 2us; 2us; 3us; 4us; 5us; 3us; 4us; 5us; 6us; 2us; 1us; 7us; 5us; 5us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 1us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 3us; 3us; 1us; 1us; 1us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 14us; 15us; 15us; 15us; 16us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 19us; 20us; 20us; 20us; 20us; 20us; 20us; 21us; 21us; 21us; 21us; 21us; 22us; 22us; 23us; 23us; 24us; 24us; 24us; 24us; 25us; 25us; 26us; 27us; 28us; 28us; 28us; 28us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 65535us; 16389us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 16420us; 65535us; 16421us; 65535us; 65535us; 16422us; 65535us; 65535us; 65535us; 65535us; 16424us; 65535us; 65535us; 65535us; 16426us; 65535us; 65535us; 65535us; 65535us; 65535us; 16428us; 65535us; 16429us; 16430us; 16431us; 16432us; 16433us; 65535us; 65535us; 16435us; 65535us; 16436us; 65535us; 65535us; 65535us; 65535us; 65535us; 16438us; 65535us; 65535us; 65535us; 65535us; 16441us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16442us; 16443us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16460us; 16461us; 16462us; 16463us; 65535us; 65535us; 16464us; 65535us; 65535us; 16466us; 65535us; 65535us; 16467us; 65535us; 65535us; 16469us; 65535us; 16470us; 16472us; 65535us; 16474us; 16475us; 16476us; 65535us; 16477us; 16478us; 16479us; 16480us; 16481us; 16482us; 16483us; 16484us; 16485us; 16486us; |]
let _fsyacc_reductions ()  =    [| 
# 553 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 562 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "CPar.fsy"
                                                               Prog _1 
                   )
# 56 "CPar.fsy"
                 : Absyn.program));
# 573 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               [] 
                   )
# 61 "CPar.fsy"
                 : 'gentype_Topdecs));
# 583 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 62 "CPar.fsy"
                 : 'gentype_Topdecs));
# 595 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 66 "CPar.fsy"
                 : 'gentype_Topdec));
# 606 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VariableDeclareAndAssign in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "CPar.fsy"
                                                               VariableDeclareAndAssign(first _1, second _1 , third _1)  
                   )
# 67 "CPar.fsy"
                 : 'gentype_Topdec));
# 617 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "CPar.fsy"
                                                               _1 
                   )
# 68 "CPar.fsy"
                 : 'gentype_Topdec));
# 628 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 86 "CPar.fsy"
                 : 'gentype_Vardec));
# 640 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "CPar.fsy"
                                                       ((fst _2) _1, snd _2 , _4) 
                   )
# 91 "CPar.fsy"
                 : 'gentype_VariableDeclareAndAssign));
# 653 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 103 "CPar.fsy"
                 : 'gentype_Vardesc));
# 664 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 108 "CPar.fsy"
                 : 'gentype_Vardesc));
# 675 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "CPar.fsy"
                                                               _2                                      
                   )
# 110 "CPar.fsy"
                 : 'gentype_Vardesc));
# 686 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 112 "CPar.fsy"
                 : 'gentype_Vardesc));
# 697 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 114 "CPar.fsy"
                 : 'gentype_Vardesc));
# 709 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 119 "CPar.fsy"
                 : 'gentype_Fundec));
# 722 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 121 "CPar.fsy"
                 : 'gentype_Fundec));
# 736 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               [] 
                   )
# 126 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 746 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               _1 
                   )
# 127 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 757 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "CPar.fsy"
                                                               [_1]     
                   )
# 131 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 768 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 132 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 780 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                               Block _2 
                   )
# 137 "CPar.fsy"
                 : 'gentype_Block));
# 791 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               [] 
                   )
# 141 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 801 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 142 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 813 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 143 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 825 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VariableDeclareAndAssign in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                                      DeclareAndAssign(first _1, second _1 , third _1) :: _3 
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 837 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               _1 
                   )
# 148 "CPar.fsy"
                 : 'gentype_Stmt));
# 848 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               _1 
                   )
# 149 "CPar.fsy"
                 : 'gentype_Stmt));
# 859 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                                               Expr(_1)             
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtM));
# 870 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                                               Return None          
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtM));
# 880 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                                               Return(Some(_2))     
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtM));
# 891 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                                               _1                   
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtM));
# 902 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                                               If(_3, _5, _7)       
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtM));
# 915 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                                               While(_3, _5)        
                   )
# 158 "CPar.fsy"
                 : 'gentype_StmtM));
# 927 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                                               For(_3,_5,_7,_9)     
                   )
# 159 "CPar.fsy"
                 : 'gentype_StmtM));
# 941 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                                               Dowhile(_2, _5)      
                   )
# 160 "CPar.fsy"
                 : 'gentype_StmtM));
# 953 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                                               Switch(_3,_6)        
                   )
# 161 "CPar.fsy"
                 : 'gentype_StmtM));
# 965 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                                               Break                
                   )
# 162 "CPar.fsy"
                 : 'gentype_StmtM));
# 975 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                                               Continue             
                   )
# 163 "CPar.fsy"
                 : 'gentype_StmtM));
# 985 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtCatch in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                                               Try(_2,_3)           
                   )
# 164 "CPar.fsy"
                 : 'gentype_StmtM));
# 997 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                                          [Case(_2,_4)]        
                   )
# 168 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1009 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                                          Case(_2,_4) :: _5    
                   )
# 169 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1022 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                                          [Default(_3)]        
                   )
# 170 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1033 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                                          Default(_3) :: _4    
                   )
# 171 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1045 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_EXCEPTION in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                                          [Catch(_3,_5)]     
                   )
# 175 "CPar.fsy"
                 : 'gentype_StmtCatch));
# 1057 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_EXCEPTION in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtCatch in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                                          Catch(_3,_5) :: _6 
                   )
# 176 "CPar.fsy"
                 : 'gentype_StmtCatch));
# 1070 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                                          [Finally(_2)]      
                   )
# 177 "CPar.fsy"
                 : 'gentype_StmtCatch));
# 1081 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                                          Exception _1 
                   )
# 181 "CPar.fsy"
                 : 'gentype_EXCEPTION));
# 1092 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 185 "CPar.fsy"
                 : 'gentype_StmtU));
# 1105 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_StmtU));
# 1117 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 187 "CPar.fsy"
                 : 'gentype_StmtU));
# 1129 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Access _1           
                   )
# 191 "CPar.fsy"
                 : 'gentype_Expr));
# 1140 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               _1                  
                   )
# 192 "CPar.fsy"
                 : 'gentype_Expr));
# 1151 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               _1                        
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1162 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               Assign(_1, _3)            
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1174 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               CallOperator(_1, _3)      
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1186 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               Prim1("!", _2)            
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1197 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               Prim1("printi", _2)       
                   )
# 200 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1208 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               Prim1("printc", nl)       
                   )
# 201 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1218 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               Prim1("I++", _1)     
                   )
# 202 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1229 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                               Prim1("I--", _1)     
                   )
# 203 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1240 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                               Prim1("++I", _2)     
                   )
# 204 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1251 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               Prim1("--I", _2)     
                   )
# 205 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1262 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               Prim2("+",  _1, _3)       
                   )
# 206 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1274 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               Prim2("-",  _1, _3)       
                   )
# 207 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1286 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               Prim2("*",  _1, _3)       
                   )
# 208 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1298 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               Prim2("/",  _1, _3)       
                   )
# 209 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1310 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               Prim2("%",  _1, _3)       
                   )
# 210 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1322 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               Prim2("==", _1, _3)       
                   )
# 211 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1334 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               Prim2("!=", _1, _3)       
                   )
# 212 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1346 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               Prim2(">",  _1, _3)       
                   )
# 213 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1358 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               Prim2("<",  _1, _3)       
                   )
# 214 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1370 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               Prim2(">=", _1, _3)       
                   )
# 215 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1382 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               Prim2("<=", _1, _3)       
                   )
# 216 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1394 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               Prim3(_1,_3,_5)           
                   )
# 217 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1407 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               AndOperator(_1, _3)       
                   )
# 218 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1419 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               OrOperator(_1, _3)        
                   )
# 219 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1431 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                               CstI _1              
                   )
# 227 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1442 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstFloat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               ConstFloat(_1)       
                   )
# 228 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1453 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstChar in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               ConstChar(_1)        
                   )
# 229 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1464 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CPar.fsy"
                                                               ConstString(_1)      
                   )
# 230 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1475 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "CPar.fsy"
                                                               _2                   
                   )
# 231 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1486 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "CPar.fsy"
                                                               Addr _2              
                   )
# 232 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1497 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "CPar.fsy"
                                                               AccVar _1           
                   )
# 236 "CPar.fsy"
                 : 'gentype_Access));
# 1508 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "CPar.fsy"
                                                               _2                  
                   )
# 237 "CPar.fsy"
                 : 'gentype_Access));
# 1519 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 238 "CPar.fsy"
                 : 'gentype_Access));
# 1530 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 239 "CPar.fsy"
                 : 'gentype_Access));
# 1541 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 240 "CPar.fsy"
                 : 'gentype_Access));
# 1553 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 "CPar.fsy"
                                                               []       
                   )
# 244 "CPar.fsy"
                 : 'gentype_Exprs));
# 1563 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "CPar.fsy"
                                                               _1       
                   )
# 245 "CPar.fsy"
                 : 'gentype_Exprs));
# 1574 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "CPar.fsy"
                                                               [_1]     
                   )
# 249 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1585 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 250 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1597 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "CPar.fsy"
                                                               _1       
                   )
# 254 "CPar.fsy"
                 : 'gentype_Const));
# 1608 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 "CPar.fsy"
                                                               _1       
                   )
# 255 "CPar.fsy"
                 : 'gentype_Const));
# 1619 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 "CPar.fsy"
                                                               - _2     
                   )
# 256 "CPar.fsy"
                 : 'gentype_Const));
# 1630 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "CPar.fsy"
                                                               -1       
                   )
# 257 "CPar.fsy"
                 : 'gentype_Const));
# 1640 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 "CPar.fsy"
                                                               _1       
                   )
# 261 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1651 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 262 "CPar.fsy"
                                                               - _2     
                   )
# 262 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1662 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 "CPar.fsy"
                                                               _1       
                   )
# 265 "CPar.fsy"
                 : 'gentype_ConstChar));
# 1673 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 268 "CPar.fsy"
                                                               _1       
                   )
# 268 "CPar.fsy"
                 : 'gentype_ConstString));
# 1684 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 272 "CPar.fsy"
                                                               TypI     
                   )
# 272 "CPar.fsy"
                 : 'gentype_Type));
# 1694 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 273 "CPar.fsy"
                                                               TypC     
                   )
# 273 "CPar.fsy"
                 : 'gentype_Type));
# 1704 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 274 "CPar.fsy"
                                                               TypFloat    
                   )
# 274 "CPar.fsy"
                 : 'gentype_Type));
# 1714 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 275 "CPar.fsy"
                                                               TypString    
                   )
# 275 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1725 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 61;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
